name: Build Tesseract Bundles

on:
  workflow_dispatch:
    inputs:
      overwrite:
        description: 'Overwrite existing bundles'
        type: boolean
        required: false
        default: false

jobs:
  bundle:
    runs-on: windows-latest

    strategy:
      matrix:
        include:
          - msystem: UCRT64
            prefix: mingw-w64-ucrt-x86_64
          - msystem: CLANG64
            prefix: mingw-w64-clang-x86_64
          - msystem: CLANGARM64
            prefix: mingw-w64-clang-aarch64

    steps:
      - name: Prepare git
        run: |
          git config --global core.autocrlf false
          git config --global user.email 'your.email@domain.com'
          git config --global user.name  'Your Name'

      - name: Setup MSYS2 (${{ matrix.msystem }})
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          update: true
          install: |
            # toolchain (gcc/clang, binutils)
            ${{ matrix.prefix }}-toolchain

            # Tesseract engine + import libs
            ${{ matrix.prefix }}-tesseract-ocr
            ${{ matrix.prefix }}-leptonica
            ${{ matrix.prefix }}-libpng
            ${{ matrix.prefix }}-libjpeg-turbo
            ${{ matrix.prefix }}-libtiff
            ${{ matrix.prefix }}-zlib

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Bundle (${{ matrix.msystem }})
        id: bundle
        shell: msys2 {0}
        env:
          package: tesseract-ocr
          overwrite: ${{ github.event.inputs.overwrite }}
        run: ./build.sh

      - name: Publish Release (${{ matrix.msystem }})
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: tesseract-ocr-${{ steps.bundle.outputs.version }}-${{ matrix.msystem }}
          files: dist/*.xz
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
