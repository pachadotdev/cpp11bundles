name: Build Tesseract Bundles

on:
  workflow_dispatch:
    inputs:
      overwrite:
        description: 'Overwrite existing bundles'
        type: boolean
        required: false
        default: false

jobs:
  bundle:
    runs-on: windows-latest

    strategy:
      matrix:
        include:
          - msystem: CLANG64
            prefix: mingw-w64-clang-x86_64
            is_cross: false
          # - msystem: UCRT64
          #   prefix: mingw-w64-ucrt-x86_64
          #   is_cross: false
          # - msystem: CLANG64  # Use CLANG64 for cross-compilation
          #   target: aarch64
          #   prefix: mingw-w64-clang-aarch64
          #   is_cross: true

    steps:
      - name: Prepare git
        run: |
          git config --global core.autocrlf false
          git config --global user.email 'your.email@domain.com'
          git config --global user.name  'Your Name'

      - name: Setup MSYS2 (${{ matrix.msystem }})
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          update: true
          install: >-
            ${{ matrix.prefix }}-toolchain
            ${{ matrix.prefix }}-tesseract-ocr
            ${{ matrix.prefix }}-leptonica
            ${{ matrix.prefix }}-libpng
            ${{ matrix.prefix }}-libjpeg-turbo
            ${{ matrix.prefix }}-libtiff
            ${{ matrix.prefix }}-zlib
            pacman-contrib
            curl

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Bundle (${{ matrix.msystem }})
        id: bundle
        shell: msys2 {0}
        env:
          package: tesseract-ocr
          overwrite: ${{ github.event.inputs.overwrite }}
          MSYSTEM: ${{ matrix.msystem }}
          IS_CROSS: ${{ matrix.is_cross }}
          TARGET_ARCH: ${{ matrix.target }}
          VERBOSE: 1  # Enable verbose output
        run: |
          # Set correct PATH for the MSYS2 subsystem
          export PATH="/usr/bin:/${MSYSTEM,,}/bin:$PATH"
          
          # Debug environment
          echo "MSYSTEM: $MSYSTEM"
          echo "PATH: $PATH"
          echo "Building package: $package"
          
          # Debug include paths
          echo "Checking for Leptonica headers:"
          find "/${MSYSTEM,,}/include" -name "leptonica" -type d
          ls -la "/${MSYSTEM,,}/include/leptonica/" || echo "Leptonica headers not found!"
          
          # Run build script
          ./build.sh
          
          # Debug results
          echo "Bundle contents:"
          find dist -type f | sort

      - name: Publish Release (${{ matrix.msystem }})
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: tesseract-ocr-${{ steps.bundle.outputs.version }}
          files: dist/*.xz
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
